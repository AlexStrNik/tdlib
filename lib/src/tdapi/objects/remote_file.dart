part of '../tdapi.dart';

class RemoteFile implements TLObject {
  String id;
  bool isUploadingActive;
  bool isUploadingCompleted;
  int uploadedSize;

  /// Represents a remote file.
  ///[id] Remote file identifier; may be empty. Can be used across application restarts or even from other devices for the current user. If the ID starts with "http. If downloadFile is called on such a file or if it is sent to a secret chat, TDLib starts a file generation process by sending updateFileGenerationStart to the client with the HTTP URL in the original_path and "#url#" as the conversion string. Clients should generate the file by downloading it to the specified location.
  /// [isUploadingActive] True, if the file is currently being uploaded (or a remote copy is being generated by some other means).
  /// [isUploadingCompleted] True, if a remote copy is fully available.
  /// [uploadedSize] Size of the remote available part of the file; 0 if unknown
  RemoteFile(
      {this.id,
      this.isUploadingActive,
      this.isUploadingCompleted,
      this.uploadedSize});

  /// Parse from a json
  RemoteFile.fromJson(Map<String, dynamic> json) {
    this.id = json['id'];
    this.isUploadingActive = json['is_uploading_active'];
    this.isUploadingCompleted = json['is_uploading_completed'];
    this.uploadedSize = json['uploaded_size'];
  }

  @override
  Map<String, dynamic> toJson() {
    return {
      "@type": CONSTRUCTOR,
      "id": this.id,
      "is_uploading_active": this.isUploadingActive,
      "is_uploading_completed": this.isUploadingCompleted,
      "uploaded_size": this.uploadedSize
    };
  }

  static const String CONSTRUCTOR = "remoteFile";

  @override
  String getConstructor() => CONSTRUCTOR;
}
